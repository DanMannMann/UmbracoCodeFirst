@inherits CodeFirstDocumentView<Demo.DocumentTypes.LocationConfig, Demo.Controllers.LocationConfigViewModel>
@using Felinesoft.UmbracoCodeFirst.Views
<html>
    <head>
        <title>Test</title>
    </head>
    <body>
        <br /><br /><br />
        <div>Cords: @Document.Coordinates</div>
        <div>Picked: @Document.Picked</div>

        <div>Test1: @Document.TestProperties.String</div>
        <div>Test2: @Document.TestProperties.Numeric</div>
        <div>Test3: @Document.TestProperties.DateTime</div>
        <div>Test4: @Document.TestProperties.ContentPicker</div>
        <div>Test5: @Document.TestProperties.ColorPicker</div>
        <div>Test6: @Document.TestProperties.Bool</div>
        <div>Test7: @Document.TestProperties.CheckboxList</div>
        <div>Test8: @Document.TestProperties.DropdownList</div>
        <div>Test9: @Document.TestProperties.DropdownListMultiple</div>
        <div>Test10: @Document.TestProperties.RadioButtonList</div>
        <div>Test11: @Document.TestProperties.AttributeTargets</div>
        <div>Test12: @Document.TestProperties.Options</div>
        <div>Test13: @Document.TestProperties.Choices</div>

        <div>Label: @Document.Test2Properties.Label</div>
        <div>MediaPicker: @Document.Test2Properties.MediaPicker</div>
        <div>MemberPicker: @Document.Test2Properties.MemberPicker</div>
        <div>MultipleMediaPicker: @Document.Test2Properties.MultipleMediaPicker</div>
        @StackExchange.Profiling.MiniProfiler.RenderIncludes()
    </body>
</html>

@*@model Demo.DocumentTypes.LocationConfig
@using Felinesoft.UmbracoCodeFirst
 
<div>
    @Model.Coordinates.Latitude
    @Model.Coordinates.Longitude
    @
</div>

@if (Model.Picked == null)
{
    <div>No content picked</div>
}
else
{
    <div>
        @Model.Picked.Name
        <br />
        @Model.Picked.Url
    </div>
    
    if (Model.Picked.HasContentError)
    {
        <div>
            @Model.Picked.ErrorMessage
        </div>
    }
    else
    {
        <div>
            @Model.Picked.PublishedContent.Name - @Model.Picked.PublishedContent.Description
        </div>
        <div>
            @Model.Picked.PublishedContent.Color.HexCode
        </div>
        <div>
            @Model.Picked.PublishedContent.Date
        </div>
    }
}*@

@*@inherits UmbracoDocumentViewPage<Demo.DocumentTypes.LocationConfig>*@
@*<html>
    <head>
        <title>Test</title>
    </head>
    <body>
        <div>
            @Document.Coordinates.Latitude
            @Document.Coordinates.Longitude
        </div>

        <div>
            @using (Html.BeginUmbracoForm<Demo.Controllers.LocationConfigSurfaceController>("SubmitModel"))
            {
                @ViewModelHelper.EditorFor(x => x.Comments)
                @ViewModelHelper.EditorFor(x => x.Visited)
                @ViewModelHelper.EditorFor(x => x.Times)
                <input type="submit" value="OK" />
            }
        </div>

        @if(Document.Picked == null)
        {
            <div>No content picked</div>
        }
        else
        {
            <div>
                @Document.Picked.Name
                <br />
                @Document.Picked.Url
            </div>
    
            if (Document.Picked.HasContentError)
            {
                <div>
                    @Document.Picked.ErrorMessage
                </div>
            }
            else
            {
                <div>
                    @Document.Picked.TypedContent.Name - @Document.Picked.TypedContent.Description
                </div>
                <div>
                    @Document.Picked.TypedContent.Color.HexCode
                </div>
                <div>
                    @Document.Picked.TypedContent.Date
                </div>
            }
        }
        @StackExchange.Profiling.MiniProfiler.RenderIncludes()
    </body>
</html>*@