<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Getting Started</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Welcome" /><meta name="Microsoft.Help.Id" content="04441c6f-baf5-4f66-a724-d0107a13af66" /><meta name="Description" content="Code-First for Umbraco is a framework for creating and managing Umbraco document types, data types, media types and other entity types using an attribute-driven, code-first approach." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Felinesoft Code-First for Umbraco<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Felinesoft Code-First for Umbraco" tocid="roottoc">Felinesoft Code-First for Umbraco</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Getting Started" tocid="04441c6f-baf5-4f66-a724-d0107a13af66">Getting Started</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82.htm" title="Working With Document Types" tocid="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82">Working With Document Types</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ea9b7789-8c43-48af-9c5e-7860e55cabe1.htm" title="Working With Data Types" tocid="ea9b7789-8c43-48af-9c5e-7860e55cabe1">Working With Data Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="844edfcf-ec79-489e-85fb-e07b441af825.htm" title="Working With Strongly-Typed Views" tocid="844edfcf-ec79-489e-85fb-e07b441af825">Working With Strongly-Typed Views</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="79ea8886-41e6-4691-9d55-4c3fc3be5310.htm" title="Working With Media Types" tocid="79ea8886-41e6-4691-9d55-4c3fc3be5310">Working With Media Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="b3e13010-a239-4b6b-bc27-8711a5f00a6c.htm" title="Working With Node Pickers" tocid="b3e13010-a239-4b6b-bc27-8711a5f00a6c">Working With Node Pickers</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/feline.png" /></td><td class="titleColumn">Getting Started</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
        Code-First for Umbraco is a framework for creating and managing Umbraco document types,
        data types, media types and other entity types using an attribute-driven, code-first approach. The
        defined content type classes can also be used as strongly-typed, compile-time-checked models in views.
      </p><p>
        The demo project included in the Visual Studio solution has examples of all that stuff.
      </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#features">Features</a></li><li class="outlineSectionEntry"><a href="#config">Configuring your site to use Code-First</a></li><li class="outlineSectionEntry"><a href="#types">Creating Code-First Entities</a></li><li class="outlineSectionEntry"><a href="#generate">Converting existing sites to code-first</a></li><li class="outlineSectionEntry"><a href="#remarks">Code-First Entity Types &amp; the Back-Office</a></li></ul></div><div class="collapsibleAreaRegion" id="features"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Features</span></div><div id="ID0RBSection" class="collapsibleSection"><ul><li><p>
              Document Type, Media Type, Member Type &amp; Data Type creation and management
            </p></li><li><p>
              Content type tabs - including sharing tab definitions between document types &amp; inheritance in tabs
            </p></li><li><p>
              Content type composition
            </p></li><li><p>
              Built-in implementations of the Umbraco default data &amp; media types
            </p></li><li><p>
              Parallel initialisation &amp; intelligent updating to minimise bootstrapping time
            </p></li><li><p>
              Efficient lazy loading of virtual properties when constructing models for strongly-typed views
            </p></li><li><p>
              Optional hiding of "code-first managed" types from the settings &amp; developer trees in the Umbraco back-office
            </p></li><li><p>
              Strongly-typed content pickers
            </p></li><li><p>
              Specialised Razor view base with a convenience property &amp; HTML helper for accessing and manipulating the strongly-typed document data
            </p></li><li><p>
              Generate C# class files for types already in the Umbraco database - easily convert existing sites to a code-first workflow
            </p></li><li><p>
              Linq-like extensions for navigating the content tree by CLR type - e.g. x.NearestAncestor&lt;MyType&gt;()
            </p></li></ul></div><div class="collapsibleAreaRegion" id="config"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Configuring your site to use Code-First</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          Code-First generally requires only a single call to one of the <a href="b1377019-ec5f-026b-38e0-41eb3d96bd31.htm">CodeFirstManager</a>
          Initialise overloads to get things up and running. You'll need to pass in all of your <a href="#types">code-first entities</a> in a single call, either by passing
          in a collection of the types or by passing in all of the assemblies where your types are contained.
        </p><p>
          The example below shows code which will work in the vast majority of circumstances. It assumes that the Startup event handler class is inside your main
          MVC assembly, which also contains all of your code-first entity types. Code-first initialisation will take place each time your site starts up.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAFAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABAFAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAFAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Startup : ApplicationEventHandler
{
    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> ApplicationStarted(UmbracoApplicationBase umbracoApplication, ApplicationContext applicationContext)
    {
        <span class="highlight-keyword">base</span>.ApplicationStarted(umbracoApplication, applicationContext);

        <span class="highlight-comment">//Initialise code-first using the types in the current assembly</span>
        CodeFirstManager.Current.Initialise(<span class="highlight-keyword">this</span>.GetType().Assembly);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAFAAA");</script><p>
          In order to enable strongly typed models &amp; views based on the code-first types initialisation needs to be run every time the site starts. The
          information gathered during initialisation is used to make the model building possible in an efficient way; without calling Initialise properly the
          strongly-typed models &amp; views won't work, even if all of the entities already exist in the database.
        </p></div><div class="collapsibleAreaRegion" id="types"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Creating Code-First Entities</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          Code-First allows management of document, media, member &amp; data types, pre-values and templates. In the future support for all other entity types will be added
          (users, relations, etc).
        </p><p>
          Documentation on creating the supported entities can be found in the topics listed below:
        </p><ul><li><p><a href="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82.htm">Working With Document Types</a></p></li><li><p><a href="ea9b7789-8c43-48af-9c5e-7860e55cabe1.htm">Working With Data Types</a></p></li><li><p><a href="1a5b08a0-7cdf-4538-b315-9e0652e5e6e0.htm">Creating Custom Data Types</a></p></li><li><p><a href="f13fc6da-38dc-4585-b0f3-e701d17d03e1.htm">Working With Pre-Values</a></p></li><li><p><a href="79ea8886-41e6-4691-9d55-4c3fc3be5310.htm">Working With Media Types</a></p></li></ul></div><div class="collapsibleAreaRegion" id="generate"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Converting existing sites to code-first</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          There are code-generation tools which can be used to generate class files for existing data, media &amp; document types in a site. They are useful for converting an
          existing site to use code-first, and were in fact used to generate most of the classes in the
          <a href="9558e6f9-e80a-8c78-4333-f06cd398ddb6.htm">Felinesoft.UmbracoCodeFirst.DataTypes.BuiltIn</a> namespace.
        </p><p>
          These tools are not yet documented or guaranteed stable, but do work fairly well.The tools are triggered by adding the following line of
          code, typically in a startup event handler, after initialising code-first.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CodeFirstManager.Current.Initialise(<span class="highlight-keyword">this</span>.GetType().Assembly);
CodeFirstManager.Current.GenerateTypeFilesFromDatabase(<span class="highlight-literal">@"E:\MyFolder"</span>, <span class="highlight-literal">"My.Namespace"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACADAAA");</script><p>
          If you need to run the tool without initialising code-first you
          must manually populate the module resolver with the relevant modules and freeze the resolver before attempting to generate the types.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//extension method AddDefaultModules in namespace Felinesoft.UmbracoCodeFirst.Extensions</span>
CodeFirstManager.Current.Modules.AddDefaultModules();
CodeFirstManager.Current.Modules.FreezeResolver();
CodeFirstManager.Current.GenerateTypeFilesFromDatabase(<span class="highlight-literal">@"E:\MyFolder"</span>, <span class="highlight-literal">"My.Namespace"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="remarks"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Code-First Entity Types &amp; the Back-Office</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
          Making changes to the entity types (document types, data types etc) via the usual back-office methods can be unreliable when using code-first. For entity types for
          which no code-first definition exists the default Umbraco behaviour will be honoured. Wherever a code-first definition exists any changes made
          to that entity type via the back-office developer and/or settings applications will be overwritten next time code-first is initialised. 
          It is a better approach to do all entity type definition and modification in code.
        </p><p>
          You can automatically hide all "code-first managed" entity types from the trees in the developer &amp; settings back-office
          applications by adding the following line of code, usually in a startup event handler.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CodeFirstManager.Current.Features.HideCodeFirstEntityTypesInTrees = <span class="highlight-keyword">true</span>;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAACAAA");</script></div></div></div><div id="pageFooter" class="pageFooter" /></body><script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>