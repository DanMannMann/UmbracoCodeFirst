<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Using Tabs on Document Types</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="20fe66a1-809d-4422-b3a6-301da9ff84a1" /><meta name="Description" content="In Umbraco tabs are used to group document properties in the backoffice. In code-first tabs can also be used across multiple unrelated document types, allowing sets of properties to be shared between document types and managed in one place." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Felinesoft Code-First for Umbraco<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Felinesoft Code-First for Umbraco" tocid="roottoc">Felinesoft Code-First for Umbraco</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Getting Started" tocid="04441c6f-baf5-4f66-a724-d0107a13af66">Getting Started</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82.htm" title="Working With Document Types" tocid="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82">Working With Document Types</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="20fe66a1-809d-4422-b3a6-301da9ff84a1.htm" title="Using Tabs on Document Types" tocid="20fe66a1-809d-4422-b3a6-301da9ff84a1">Using Tabs on Document Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3a202165-ef09-4764-8c0e-07b7633501a6.htm" title="Using Document Type Compositions" tocid="3a202165-ef09-4764-8c0e-07b7633501a6">Using Document Type Compositions</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/feline.png" /></td><td class="titleColumn">Using Tabs on Document Types</td></tr></table><span class="introStyle"></span><div class="introduction"><p>In Umbraco tabs are used to group document properties in the backoffice. In code-first tabs can also
      be used across multiple unrelated document types, allowing sets of properties to be shared between document types and managed
      in one place.</p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#create">Grouping Document Properties with Tabs</a></li><li class="outlineSectionEntry"><a href="#Section1">Adding Properties to an Inherited Tab</a></li></ul></div><div class="collapsibleAreaRegion" id="create"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Grouping Document Properties with Tabs</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          Tabs can be defined by creating a class which inherits <a href="23857109-2366-9f81-8c2c-bebbb97baab4.htm">TabBase</a>.
          The tab class can contain properties declared using the same approach as <a href="ec9d7ac2-6ba0-4b8c-8d1b-c591cd949e82.htm#properties">adding properties to document types</a>.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CodeFirstExampleTab : TabBase
{
    [ContentProperty(Description = <span class="highlight-literal">"A string property."</span>)]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">string</span> String { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>
          To use the tab on a document type add a property to the document type class whose type is your tab class. Decorate the property with a
          <a href="82a67e2b-0d73-cb6d-e666-6ec5f4c201fe.htm">ContentTabAttribute</a>. The
          following example creates a document type containing a single tab named "My Tab".
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[DocumentType(AllowedAtRoot = <span class="highlight-keyword">true</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CodeFirstExampleDocument : DocumentTypeBase
{
    [ContentTab]
    <span class="highlight-keyword">public</span> CodeFirstExampleTab MyTab { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>
          The same tab class can be used in multiple document types and can be used more than once in a given document type. This increases the variety
          of composition options available and can provide useful ways to achieve post-release changes to sites which would be more difficult without code-first.
        </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Tip" /> Tip</th></tr><tr><td><p>When a tab class is intended to be used only on a single document type then it can be neater to declare the tab as a nested class of the document type class.</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="Section1"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Adding Properties to an Inherited Tab</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          In Umbraco it is possible to create a tab in a parent document type then add some properties to that tab in a descendant document type.
          This is supported in code-first, and can be done by extending the underlying tab class then hiding the underlying tab property.
          The syntax is a little clumsy but is required to allow the Umbraco behaviour to work without
          breaking the strongly-typed modelling provided by code-first.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABBAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[DocumentType]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ParentDocType : DocumentTypeBase
{
    <span class="highlight-comment">//The underlying tab and properties</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> SEOTab : TabBase
    {
        [ContentProperty]
        <span class="highlight-keyword">public</span> Textstring MetaKeywords { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

        [ContentProperty]
        <span class="highlight-keyword">public</span> Textstring MetaDescription { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
    }

    [ContentTab]
    <span class="highlight-keyword">public</span> SEOTab SEO { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}

[DocumentType]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ChildDocType : ParentDocType
{
    <span class="highlight-comment">//The extended tab type with the additional property</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">new</span> <span class="highlight-keyword">class</span> SEOTab : ParentDocType.SEOTab
    {
        [ContentProperty]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> Textstring MetaTitle { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
    }

    <span class="highlight-comment">//Hiding the underlying tab property with a new one so that the new</span>
    <span class="highlight-comment">//tab type, with all 3 properties, is used for this document type.</span>
    [ContentTab]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">new</span> SEOTab SEO { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBAAA");</script></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>