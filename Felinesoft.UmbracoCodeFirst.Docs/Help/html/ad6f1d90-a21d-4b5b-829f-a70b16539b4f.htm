<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ImageCropper</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="ad6f1d90-a21d-4b5b-829f-a70b16539b4f" /><meta name="Description" content="Code-First has extensive support for Umbraco's powerful built-in image cropper. Crop sizes can be defined using helper attributes or by adding special crop properties to your custom image cropper data type. The built-in T:Felinesoft.UmbracoCodeFirst." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Felinesoft Code-First for Umbraco<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Felinesoft Code-First for Umbraco" tocid="roottoc">Felinesoft Code-First for Umbraco</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="04441c6f-baf5-4f66-a724-d0107a13af66.htm" title="Getting Started" tocid="04441c6f-baf5-4f66-a724-d0107a13af66">Getting Started</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="79ea8886-41e6-4691-9d55-4c3fc3be5310.htm" title="Working With Media Types" tocid="79ea8886-41e6-4691-9d55-4c3fc3be5310">Working With Media Types</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="ad6f1d90-a21d-4b5b-829f-a70b16539b4f.htm" title="ImageCropper" tocid="ad6f1d90-a21d-4b5b-829f-a70b16539b4f">ImageCropper</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/feline.png" /></td><td class="titleColumn">ImageCropper</td></tr></table><span class="introStyle"></span><div class="introduction"><p>Code-First has extensive support for Umbraco's powerful built-in image cropper. Crop sizes can be defined using helper attributes
      or by adding special crop properties to your custom image cropper data type. The built-in 
      <a href="6cc8609c-159c-4925-89a9-61f14f77c665.htm">ImageCropper</a>
      data type wraps Umbraco's image cropper to provide fluent, strongly-typed access to the original image &amp; each crop, as well as
      to a variety of built-in effects which can be applied to the images.
    </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#using">Adding the Built-in ImageCropper to a Media Type</a></li><li class="outlineSectionEntry"><a href="#create">Creating a Custom ImageCropper Type</a></li><li class="outlineSectionEntry"><a href="#use">Using the ImageCropper in a View</a></li></ul></div><div class="collapsibleAreaRegion" id="using"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Adding the Built-in ImageCropper to a Media Type</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          The default <a href="6cc8609c-159c-4925-89a9-61f14f77c665.htm">ImageCropper</a>
          type can be used to add an image cropper to a media type (note: you can add it to any content type but it makes most sense on a media type).
          The crop sizes can be defined using the <a href="65fc40d2-1ab1-f55b-3f27-8f0109432c58.htm">ImageCropAttribute</a>
          on the property. This will cause a data type instance to be created specifically for that property, with a unique set of crop sizes. To use the same
          data type with the same crop configuration in multiple places <a href="#create">create a custom ImageCropper data type</a>.
        </p><p>The example below creates an image cropper property with three crop sizes, named "small", "med" &amp; "large", on a media type named "Example Image Media"</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[MediaType]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ExampleImageMedia : MediaTypeBase
{
    [ContentProperty]
    [ImageCrop(<span class="highlight-literal">"small"</span>, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>)]
    [ImageCrop(<span class="highlight-literal">"med"</span>, <span class="highlight-number">150</span>, <span class="highlight-number">150</span>)]
    [ImageCrop(<span class="highlight-literal">"large"</span>, <span class="highlight-number">300</span>, <span class="highlight-number">300</span>)]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> ImageCropper Image { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="create"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Creating a Custom ImageCropper Type</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          Often it is preferable to create a custom cropping configuration once then re-use it in many places. This can be achieved
          by extending the built-in ImageCropper to create a custom ImageCropper data type.
        </p><p>
          The example below creates an image cropper data type named "Example Cropper" with three crop sizes named "Small", "Med" &amp; "Large".
          The <a href="de34e734-7f6a-3e13-4687-ac72f5f3a9bf.htm">ImageCropPropertyAttribute</a>
          &amp; <a href="05471fe5-0816-82ac-fedc-d29d584ad632.htm">ImageCrop</a> type are used together
          to specify the alias &amp; size of the crop. When the underlying ImageCropper is initialised during modelling it populates these properties
          with the relevant crops so they can be used directly in strongly-typed views.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[DataType]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ExampleCropper : ImageCropper
{
    [ImageCropProperty(<span class="highlight-number">50</span>, <span class="highlight-number">50</span>)]
    <span class="highlight-keyword">public</span> ImageCrop Small { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    [ImageCropProperty(<span class="highlight-number">150</span>, <span class="highlight-number">150</span>)]
    <span class="highlight-keyword">public</span> ImageCrop Med { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    [ImageCropProperty(<span class="highlight-number">300</span>, <span class="highlight-number">300</span>)]
    <span class="highlight-keyword">public</span> ImageCrop Large { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="use"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Using the ImageCropper in a View</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          The following examples are based on a document type with a media item property (Document.ImageMediaItem), where that media item
          contains an ImageCropper property (ImageMediaItem.ImageCropper).
        </p><p>
          The built-in ImageCropper type implements IHtmlString to produce raw HTML output if it is used within an HTML element body. It also overrides ToString
          to return the image URL if it is used inside an HTML tag (e.g. as an attribute value). The two lines in the example below thus produce
          identical output
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGABAAA_tab1" class="codeSnippetContainerTabSingle">razor</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">img</span> <span class="highlight-xml-attribute-name">src</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"@Document.ImageMediaItem.ImageCropper"</span> <span class="highlight-xml-bracket">/&gt;</span>
@Document.ImageMediaItem.ImageCropper</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABAAA");</script><p>
          The crops can be accessed via the Crops collection. The ImageCrop type also implements IHtmlString to produce an img tag when
          referenced in the body of an HTML element.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEABAAA_tab1" class="codeSnippetContainerTabSingle">razor</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">@<span class="highlight-keyword">foreach</span>(ImageCrop crop <span class="highlight-keyword">in</span> Document.ImageMediaItem.ImageCropper.Crops)
{
    &lt;div&gt;
        @crop
    &lt;/div&gt;
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEABAAA");</script><p>
          If you've created a custom ImageCropper type with ImageCrop properties you can also access those crops via the ImageCrop property
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABAAA_tab1" class="codeSnippetContainerTabSingle">razor</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span>@Document.ImageMediaItem.ImageCropper.Small<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span>@Document.ImageMediaItem.ImageCropper.Med<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span>@Document.ImageMediaItem.ImageCropper.Large<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">div</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAAA");</script><p>
          You can also access effects on any crop, or on the original image, via the Effects property. A variety of the 
          built-in effects are supported. The effect methods' return values implement IHtmlString and produce HTML similar
          to that of an ordinary crop, except including the query string parameters required for the effect.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">razor</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">@Document.ImageMediaItem.ImageCropper.Large.Effects.Filter(FilterType.Sepia)
@Document.ImageMediaItem.ImageCropper.Effects.Filter(FilterType.BlackWhite)
@Document.ImageMediaItem.ImageCropper.Med.Effects.Flip(FlipType.Vertical)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>