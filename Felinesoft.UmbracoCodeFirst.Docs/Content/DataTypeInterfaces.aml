<?xml version="1.0" encoding="utf-8"?>
<topic id="cb1301cc-cf88-4b2a-a662-3611bd2634e1" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <autoOutline />

      <para>
        The following interfaces can be used to specify the storage and underlying type of a custom data type. The underlying type is specified
        by the generic type parameter. The storage type depends on the interface used.
      </para>
      <para>
        There are also a few convenience interfaces which specify data types using the standard mapping (i.e. where no property editor value type
        converter is used).
      </para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="interfaces">
      <title>Data Type Interfaces</title>
      <content>
        <list class="bullet">
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoDateTimeDataType`1</codeEntityReference>
            </para>
            <para>Specifies that the data value should be stored as a DateTime2 type</para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoIntegerDataType`1</codeEntityReference>
            </para>
            <para>Specifies that the data value should be stored as a 32-bit integer type</para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoNtextDataType`1</codeEntityReference>
            </para>
            <para>Specifies that the data value should be stored as an Ntext type</para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoNvarcharDataType`1</codeEntityReference>
            </para>
            <para>Specifies that the data value should be stored as an Nvarchar(MAX) type</para>
          </listItem>
        </list>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>

    <section address="convenience">
      <title>Convenience Interfaces</title>
      <content>
        <list class="bullet">
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoDateDataType</codeEntityReference>
            </para>
            <para>
              Specifies that the data value should be stored as a DateTime2 type and will be returned as a <codeEntityReference qualifyHint="false">T:System.DateTime</codeEntityReference>
              struct.
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoIntDataType</codeEntityReference>
            </para>
            <para>
              Specifies that the data value should be stored as a 32-bit integer type and will be returned as a <codeEntityReference qualifyHint="false">T:System.Int32</codeEntityReference>
              value.
            </para>
          </listItem>
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Felinesoft.UmbracoCodeFirst.DataTypes.IUmbracoStringDataType</codeEntityReference>
            </para>
            <para>
              Specifies that the data value should be stored as an Ntext type and will be returned as a <codeEntityReference qualifyHint="false">T:System.String</codeEntityReference>
              value.
            </para>
          </listItem>
        </list>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
