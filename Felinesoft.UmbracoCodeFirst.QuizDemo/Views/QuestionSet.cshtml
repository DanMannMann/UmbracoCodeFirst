<!--
	This view inherits CodeFirstDocumentView<Tdoc,Tvm>, which allows code-first strongly typed views to be used alongside a custom viewmodel for richly-featured applications.
	You need to inject the viewmodel. This can be done by either:
		1. creating a custom RenderMvcController which passes an instance of DocumentViewModel<Tdoc, Tvm> to the view
	    2. Providing an OnLoad event handler for the document type (Tdoc) which will allow code-first to automatically build the model, relying on the event handler to create the custom viewmodel.
	This project uses option 2. The OnLoad event handler can be found on the QuestionSetSurfaceController. The event binding is via an attribute on the class declaration for QuestionSet.
-->

@inherits CodeFirstDocumentView<QuestionSet, QuestionSetViewModel>
@using Felinesoft.UmbracoCodeFirst.Views
@using Felinesoft.UmbracoCodeFirst.QuizDemo.DocTypes

@{ 
	Layout = "_layout.cshtml";
}

@section title{
	@Document.NodeDetails.Name
}

<div class="content">
    <p>
        @Document.Content.WelcomeParagraph
    </p>
</div>

@Html.Partial(ViewModel.RequiredPartial, UnderlyingViewModel)

@*<div style="margin:10px">
	@(Dictionary<QuizmasterDictionary>().CopyrightMessage)
</div>*@